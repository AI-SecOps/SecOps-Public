{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "LogicAppName": {
            "defaultValue": "DeleteEmail_BlockSender",
            "type": "String"
        },
        "userAssignedIdentityName": {
            "defaultValue": "POCs_MI",
            "type": "String",
            "metadata": {
                "description": "This is the User Assigned Managed Identity with 'Priviledge User Administrator', 'Log Analytic Reader', and 'Sentinel Contributor' Roles assigned to it. This identity will be used to reset the password and revoke the sign-in sessions of the user accounts linked to the incident."
            }
        },
        "AzureSentinelAPI": {
            "defaultValue": "azuresentinel-3",
            "type": "String",
            "metadata": {
                "description": "This is the working Azure Sentinel API for Entity trigger and posting comments.",
                "displayName": "Azure Sentinel API"
            }
        },
        "LogAnalyticsAPI": {
            "defaultValue": "azuremonitorlogs",
            "type": "String",
            "metadata": {
                "description": "This is the working Azure Monitor Logs API for querying log data.",
                "displayName": "Azure Monitor Logs API"
            }
        },
        "LogAnalyticsWorkspaceName": {
            "defaultValue": "GoogleLab-Workspace",
            "type": "String",
            "metadata": {
                "description": "This is the log analytics workspace name where the Sentinel data is stored.",
                "displayName": "Log Analytics Workspace Name"
            }
        }
    },
    "variables": {
        "resourceGroupLocation": "[resourceGroup().location]",
        "userAssignedIdentityId": "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', parameters('userAssignedIdentityName'))]",
        "logAnalyticsID": "[concat('/subscriptions/', subscription().subscriptionId,'/resourcegroups/', resourceGroup().name,'/providers/microsoft.operationalinsights/workspaces/',parameters('LogAnalyticsWorkspaceName'))]",
        "connections_azuresentinel_externalid": "[resourceId('Microsoft.Web/connections/', parameters('AzureSentinelAPI'))]",
        "connections_azuremonitorlogs_externalid": "[resourceId('Microsoft.Web/connections/', parameters('LogAnalyticsAPI'))]"
    },   
    "resources": [
        {
            "type": "Microsoft.Logic/workflows",
            "apiVersion": "2017-07-01",
            "dependsOn": [
                "azuremonitorlogs"
            ],
            "name": "[parameters('LogicAppName')]",
            "location": "[variables('resourceGroupLocation')]",
            "identity": {
                "type": "UserAssigned",
                "userAssignedIdentities": {
                    "[variables('userAssignedIdentityId')]": {}
                }
            },
            "properties": {
                "state": "Enabled",
                "definition": {
                    "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
                    "contentVersion": "1.0.0.0",
                    "parameters": {
                        "$connections": {
                            "defaultValue": {},
                            "type": "Object"
                        }
                    },
                    "triggers": {
                        "Microsoft_Sentinel_alert": {
                            "type": "ApiConnectionWebhook",
                            "inputs": {
                                "host": {
                                    "connection": {
                                        "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                                    }
                                },
                                "body": {
                                    "callback_url": "@{listCallbackUrl()}"
                                },
                                "path": "/subscribe"
                            }
                        }
                    },
                    "actions": {
                        "For_each_email": {
                            "foreach": "@body('Filter_MessageId_')?['NetworkMessageId']",
                            "actions": {
                                "Run_query_to_get_Email_Details": {
                                    "type": "ApiConnection",
                                    "inputs": {
                                        "host": {
                                            "connection": {
                                                "name": "@parameters('$connections')['azuremonitorlogs']['connectionId']"
                                            }
                                        },
                                        "method": "post",
                                        "body": {
                                            "query": "let SuspiciousEmails=\nEmailEvents\n| where TimeGenerated > ago(30d)\n| where NetworkMessageId == '@{items('For_each_email')}'\n| project TimeGenerated, SenderMailFromAddress, DeliveryAction, DeliveryLocation, Subject, InternetMessageId, NetworkMessageId, RecipientEmailAddress;\nlet SuspiciousSender = SuspiciousEmails | distinct SenderMailFromAddress;\nlet SenderIn90d= \nEmailEvents | where TimeGenerated > ago(90d) \n| where SenderMailFromAddress in~ (SuspiciousSender)\n| summarize SenderFirstSeen=min(TimeGenerated), SenderLastSeen=max(TimeGenerated), EmailCount=dcount(NetworkMessageId), DistinctRecipients=dcount(RecipientEmailAddress) by SenderMailFromAddress\n| extend DaysSeen=datetime_diff('day',SenderLastSeen,SenderFirstSeen);\nSuspiciousEmails\n| lookup kind=leftouter (SenderIn90d) on SenderMailFromAddress\n| lookup (IdentityInfo | summarize arg_max(TimeGenerated,AccountUPN) by RecipientEmailAddress=MailAddress | project-away TimeGenerated) on RecipientEmailAddress\n",
                                            "timerangetype": "3"
                                        },
                                        "path": "/queryDataV2",
                                        "queries": {
                                            "subscriptions": "[subscription().subscriptionId]",
                                            "resourcegroups": "[resourceGroup().name]",
                                            "resourcetype": "Log Analytics Workspace",
                                            "resourcename": "[parameters('LogAnalyticsWorkspaceName')]"
                                        }
                                    }
                                },
                                "Get_UserId": {
                                    "runAfter": {
                                        "Run_query_to_get_Email_Details": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "Http",
                                    "inputs": {
                                        "uri": "https://graph.microsoft.com/v1.0/users/@{body('Run_query_to_get_Email_Details')?['value'][0]?['RecipientEmailAddress']}",
                                        "method": "GET",
                                        "authentication": {
                                            "type": "ManagedServiceIdentity",
                                            "identity": "[variables('userAssignedIdentityId')]",
                                            "audience": "https://graph.microsoft.com"
                                        }
                                    },
                                    "runtimeConfiguration": {
                                        "contentTransfer": {
                                            "transferMode": "Chunked"
                                        }
                                    }
                                },
                                "Get_specific_Email_Id": {
                                    "runAfter": {
                                        "Get_UserId": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "Http",
                                    "inputs": {
                                        "uri": "https://graph.microsoft.com/v1.0/users/@{body('Get_UserId')?['id']}/messages?\n$filter=subject%20eq%20'@{uriComponent(body('Run_query_to_get_Email_Details')?['value'][0]?['Subject'])}'%20and%20internetMessageIdeq%20'@{uriComponent(body('Run_query_to_get_Email_Details')?['value'][0]?['InternetMessageId'])}'",
                                        "method": "GET",
                                        "authentication": {
                                            "type": "ManagedServiceIdentity",
                                            "identity": "[variables('userAssignedIdentityId')]",
                                            "audience": "https://graph.microsoft.com"
                                        }
                                    },
                                    "runtimeConfiguration": {
                                        "contentTransfer": {
                                            "transferMode": "Chunked"
                                        }
                                    }
                                },
                                "JunkMail_BlockSender": {
                                    "runAfter": {
                                        "Get_specific_Email_Id": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "Http",
                                    "inputs": {
                                        "uri": "https://graph.microsoft.com/beta/users/@{body('Get_UserId')?['id']}/messages/@{uriComponent(body('Get_specific_Email_Id')?['value'][0]?['id'])}/markAsJunk",
                                        "method": "POST",
                                        "body": {
                                            "moveToJunk": true
                                        },
                                        "authentication": {
                                            "type": "ManagedServiceIdentity",
                                            "identity": "[variables('userAssignedIdentityId')]",
                                            "audience": "https://graph.microsoft.com"
                                        }
                                    },
                                    "runtimeConfiguration": {
                                        "contentTransfer": {
                                            "transferMode": "Chunked"
                                        }
                                    }
                                },
                                "get_Incident_ARMId": {
                                    "runAfter": {
                                        "JunkMail_BlockSender": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "ApiConnection",
                                    "inputs": {
                                        "host": {
                                            "connection": {
                                                "name": "@parameters('$connections')['azuremonitorlogs']['connectionId']"
                                            }
                                        },
                                        "method": "post",
                                        "body": {
                                            "query": "SecurityIncident\n| where TimeGenerated > ago(30d)\n| where AlertIds has '@{triggerBody()?['SystemAlertId']}'\n| extend ARM_Id = tostring(split(IncidentUrl, @\"/Microsoft_Azure_Security_Insights/Incident\")[1])\n| distinct ARM_Id, IncidentNumber",
                                            "timerangetype": "3"
                                        },
                                        "path": "/queryDataV2",
                                        "queries": {
                                            "subscriptions": "[subscription().subscriptionId]",
                                            "resourcegroups": "[resourceGroup().name]",
                                            "resourcetype": "Log Analytics Workspace",
                                            "resourcename": "[parameters('LogAnalyticsWorkspaceName')]"
                                        }
                                    }
                                },
                                "For_each_Incident": {
                                    "foreach": "@body('get_Incident_ARMId')?['value']?['ARM_Id ']",
                                    "actions": {
                                        "Add_comment_to_incident_(V3)": {
                                            "type": "ApiConnection",
                                            "inputs": {
                                                "host": {
                                                    "connection": {
                                                        "name": "@parameters('$connections')['azuresentinel-1']['connectionId']"
                                                    }
                                                },
                                                "method": "post",
                                                "body": {
                                                    "incidentArmId": "@{items('For_each_Incident')}",
                                                    "message": "<p class=\"editor-paragraph\">[Analyst Action] The email from AlertId '@{triggerBody()?['SystemAlertId']}' was moved to junk folder and the sender blocked on user's mailbox '@{body('Run_query_to_get_Email_Details')?['value'][0]?['RecipientEmailAddress']}' due to potential phishing incident with the following details:</p><br><p class=\"editor-paragraph\">Email Subject: @{body('Run_query_to_get_Email_Details')?['value'][0]?['Subject']}</p><p class=\"editor-paragraph\">Email Sender: @{body('Run_query_to_get_Email_Details')?['value'][0]?['SenderMailFromAddress']}</p><p class=\"editor-paragraph\">Sender First Seen in 90 days: @{body('Run_query_to_get_Email_Details')?['value'][0]?['SenderFirstSeen']}</p>"
                                                },
                                                "path": "/Incidents/Comment"
                                            }
                                        }
                                    },
                                    "runAfter": {
                                        "get_Incident_ARMId": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "Foreach"
                                }
                            },
                            "runAfter": {
                                "Filter_MessageId_": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Foreach"
                        },
                        "Filter_MessageId_": {
                            "runAfter": {},
                            "type": "Query",
                            "inputs": {
                                "from": "@triggerBody()?['Entities']",
                                "where": "@not(equals('NetworkMessageId',null))"
                            }
                        }
                    },
                    "outputs": {}
                },
                "parameters": {
                    "$connections": {
                        "value": {
                            "azuresentinel": {
                                "id": "[subscriptionResourceId('Microsoft.Web/locations/managedApis', variables('resourceGroupLocation'), parameters('AzureSentinelAPI'))]",
                                "connectionId": "[variables('connections_azuresentinel_externalid')]",
                                "connectionName": "azuresentinel",
                                "connectionProperties": {
                                    "authentication": {
                                        "identity": "[variables('userAssignedIdentityId')]",
                                        "type": "ManagedServiceIdentity"
                                    }
                                }
                            },
                            "azuremonitorlogs": {
                                "id": "[subscriptionResourceId('Microsoft.Web/locations/managedApis', variables('resourceGroupLocation'), 'azuremonitorlogs')]",
                                "connectionId": "[variables('connections_azuremonitorlogs_externalid')]",
                                "connectionName": "azuremonitorlogs",
                                "connectionProperties": {
                                    "authentication": {
                                        "identity": "[variables('userAssignedIdentityId')]",
                                        "type": "ManagedServiceIdentity"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        {
            "type": "Microsoft.Web/connections",
            "apiVersion": "2016-06-01",
            "name": "[parameters('LogAnalyticsAPI')]",
            "location": "[variables('resourceGroupLocation')]",
            "kind": "V1",
            "properties": {
                "displayName": "[parameters('LogAnalyticsAPI')]",
                "customParameterValues": {},
                "api": {
                    "id": "[subscriptionResourceId('Microsoft.Web/locations/managedApis', variables('resourceGroupLocation'), parameters('LogAnalyticsAPI'))]"
                },
                "parameterValueSet": {
                    "username": "[reference(variables('logAnalyticsID'), '2015-03-20').customerId]",
                    "password": "[listKeys(variables('logAnalyticsID'), '2015-03-20').primarySharedKey]"
                }
            }
        }  
    ]
}
