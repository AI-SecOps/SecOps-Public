{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "LogicAppName": {
            "defaultValue": "threat-ioc",
            "type": "String"
        },
        "userAssignedIdentityName": {
            "defaultValue": "POCs_MI",
            "type": "String",
            "metadata": {
                "description": "This is the User Assigned Managed Identity with 'Priviledge User Administrator', 'Log Analytic Reader', and 'Sentinel Contributor' Roles assigned to it. This identity will be used to reset the password and revoke the sign-in sessions of the user accounts linked to the incident."
            }
        },
        "LogAnalyticsAPI": {
            "defaultValue": "azuremonitorlogs",
            "type": "String",
            "metadata": {
                "description": "This is the working Azure Monitor Logs API for querying log data.",
                "displayName": "Azure Monitor Logs API"
            }
        },
        "LogAnalyticsWorkspaceName": {
            "defaultValue": "GoogleLab-Workspace",
            "type": "String",
            "metadata": {
                "description": "This is the log analytics workspace name where the Sentinel data is stored.",
                "displayName": "Log Analytics Workspace Name"
            }
        }
    },
    "variables": {
        "resourceGroupLocation": "[resourceGroup().location]",
        "userAssignedIdentityId": "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', parameters('userAssignedIdentityName'))]",
        "logAnalyticsID": "[concat('/subscriptions/', subscription().subscriptionId,'/resourcegroups/', resourceGroup().name,'/providers/microsoft.operationalinsights/workspaces/',parameters('LogAnalyticsWorkspaceName'))]",
        "connections_azuremonitorlogs_externalid": "[resourceId('Microsoft.Web/connections/', parameters('LogAnalyticsAPI'))]",
        "connections_azureblob_externalid": "[resourceId('Microsoft.Web/connections/', 'azureblob')]"
    },  
    "resources": [
        {
            "type": "Microsoft.Logic/workflows",
            "apiVersion": "2017-07-01",
            "name": "[parameters('LogicAppName')]",
            "location": "[resourceGroup().location]",
            "identity": {
                "type": "UserAssigned",
                "userAssignedIdentities": {
                    "[variables('userAssignedIdentityId')]": {}
                }
            },
            "properties": {
                "state": "Enabled",
                "definition": {
                    "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
                    "contentVersion": "1.0.0.0",
                    "parameters": {
                        "$connections": {
                            "defaultValue": {},
                            "type": "Object"
                        }
                    },
                    "triggers": {
                        "Recurrence": {
                            "recurrence": {
                                "interval": 12,
                                "frequency": "Hour",
                                "timeZone": "Arabic Standard Time"
                            },
                            "evaluatedRecurrence": {
                                "interval": 12,
                                "frequency": "Hour",
                                "timeZone": "Arabic Standard Time"
                            },
                            "type": "Recurrence"
                        }
                    },
                    "actions": {
                        "Query_-_IP_IOCs": {
                            "runAfter": {
                                "Initialize_IOC-IP": [
                                    "Succeeded"
                                ]
                            },
                            "type": "ApiConnection",
                            "inputs": {
                                "host": {
                                    "connection": {
                                        "name": "@parameters('$connections')['azuremonitorlogs']['connectionId']"
                                    }
                                },
                                "method": "post",
                                "body": {
                                    "query": "let ThreatIOC_Urls = externaldata(Source: string, IOC_Url: string, Fields: string, Format: string, ignoreFirstRecord: bool, Target: dynamic, Exception: dynamic)[@\"https://hyperfox.blob.core.windows.net/references/threat_ioc_sources.csv\"] with (format=\"csv\", ignoreFirstRecord=True);\nThreatIOC_Urls\n| where Target has 'ip' and Source!='TweetfeedLive'",
                                    "timerangetype": "2",
                                    "timerange": {
                                        "relativeTimeRange": "Last hour"
                                    }
                                },
                                "path": "/queryDataV2",
                                "queries": {
                                    "subscriptions": "[subscription().subscriptionId]",
                                    "resourcegroups": "[resourceGroup().name]",
                                    "resourcetype": "Log Analytics Workspace",
                                    "resourcename": "[parameters('LogAnalyticsWorkspaceName')]"
                                }
                            }
                        },
                        "Query_-_Domain_IOCs": {
                            "runAfter": {
                                "Initialize_IOC-Domain": [
                                    "Succeeded"
                                ]
                            },
                            "type": "ApiConnection",
                            "inputs": {
                                "host": {
                                    "connection": {
                                        "name": "@parameters('$connections')['azuremonitorlogs']['connectionId']"
                                    }
                                },
                                "method": "post",
                                "body": {
                                    "query": "let ThreatIOC_Urls = externaldata(Source: string, IOC_Url: string, Fields: string, Format: string, ignoreFirstRecord: bool, Target: dynamic, Exception: dynamic)[@\"https://hyperfox.blob.core.windows.net/references/threat_ioc_sources.csv\"] with (format=\"csv\", ignoreFirstRecord=True);\nThreatIOC_Urls\n| where Target has 'domain' and Source!='TweetfeedLive'",
                                    "timerangetype": "2",
                                    "timerange": {
                                        "relativeTimeRange": "Last hour"
                                    }
                                },
                                "path": "/queryDataV2",
                                "queries": {
                                    "subscriptions": "[subscription().subscriptionId]",
                                    "resourcegroups": "[resourceGroup().name]",
                                    "resourcetype": "Log Analytics Workspace",
                                    "resourcename": "[parameters('LogAnalyticsWorkspaceName')]"
                                }
                            }
                        },
                        "For_each_Input": {
                            "foreach": "@body('Query_-_IP_IOCs')?['value']",
                            "actions": {
                                "Query_-_IOC_IPs": {
                                    "type": "ApiConnection",
                                    "inputs": {
                                        "host": {
                                            "connection": {
                                                "name": "@parameters('$connections')['azuremonitorlogs']['connectionId']"
                                            }
                                        },
                                        "method": "post",
                                        "body": {
                                            "query": "let ThreatIOC = externaldata(@{item()?['Fields']})[h@'@{item()?['IOC_Url']}'] with (format='@{item()?['Format']}', ignoreFirstRecord=@{item()?['ignoreFirstRecord']});\nlet IPRegex = '[0-9]{1,3}\\\\.[0-9]{1,3}\\\\.[0-9]{1,3}\\\\.[0-9]{1,3}';\nlet MaliciousIP = ThreatIOC\n| where DestIP matches regex IPRegex\n| distinct *\n| extend Source='@{item()?['Source']}'\n| project-reorder DestIP, Source;\nMaliciousIP",
                                            "timerangetype": "2",
                                            "timerange": {
                                                "relativeTimeRange": "Last hour"
                                            }
                                        },
                                        "path": "/queryDataV2",
                                        "queries": {
                                        "subscriptions": "[subscription().subscriptionId]",
                                        "resourcegroups": "[resourceGroup().name]",
                                        "resourcetype": "Log Analytics Workspace",
                                        "resourcename": "[parameters('LogAnalyticsWorkspaceName')]"
                                        }
                                    }
                                },
                                "Condition": {
                                    "actions": {
                                        "Set_IOC-IP": {
                                            "runAfter": {
                                                "union_IP_IOC": [
                                                    "Succeeded"
                                                ]
                                            },
                                            "type": "SetVariable",
                                            "inputs": {
                                                "name": "IOC-IP",
                                                "value": "@outputs('union_IP_IOC')"
                                            }
                                        },
                                        "union_IP_IOC": {
                                            "type": "Compose",
                                            "inputs": "@union(variables('IOC-IP'),body('Query_-_IOC_IPs')?['value'])"
                                        }
                                    },
                                    "runAfter": {
                                        "Query_-_IOC_IPs": [
                                            "Succeeded"
                                        ]
                                    },
                                    "else": {
                                        "actions": {}
                                    },
                                    "expression": {
                                        "and": [
                                            {
                                                "greater": [
                                                    "@length(body('Query_-_IOC_IPs')?['value'])",
                                                    0
                                                ]
                                            }
                                        ]
                                    },
                                    "type": "If"
                                }
                            },
                            "runAfter": {
                                "Query_-_IP_IOCs": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Foreach"
                        },
                        "Create_CSV_table": {
                            "runAfter": {
                                "For_each_Input": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Table",
                            "inputs": {
                                "from": "@variables('IOC-IP')",
                                "format": "CSV"
                            }
                        },
                        "threat-ioc-ip.csv": {
                            "runAfter": {
                                "Create_CSV_table": [
                                    "Succeeded"
                                ]
                            },
                            "type": "ApiConnection",
                            "inputs": {
                                "host": {
                                    "connection": {
                                        "name": "@parameters('$connections')['azureblob']['connectionId']"
                                    }
                                },
                                "method": "post",
                                "body": "@body('Create_CSV_table')",
                                "headers": {
                                    "ReadFileMetadataFromServer": true
                                },
                                "path": "/v2/datasets/@{encodeURIComponent(encodeURIComponent('sechub'))}/files",
                                "queries": {
                                    "folderPath": "[concat('/', parameters('LogicAppName'), 's')]",
                                    "name": "[concat(parameters('LogicAppName'), '-ip.csv')]",
                                    "queryParametersSingleEncoded": true
                                }
                            },
                            "runtimeConfiguration": {
                                "contentTransfer": {
                                    "transferMode": "Chunked"
                                }
                            }
                        },
                        "Initialize_IOC-IP": {
                            "runAfter": {
                                "Q_Twitter_IP_IOCs": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "IOC-IP",
                                        "type": "array",
                                        "value": "@body('Q_Twitter_IP_IOCs')?['value']"
                                    }
                                ]
                            }
                        },
                        "Q_Twitter_IP_IOCs": {
                            "runAfter": {},
                            "type": "ApiConnection",
                            "inputs": {
                                "host": {
                                    "connection": {
                                        "name": "@parameters('$connections')['azuremonitorlogs']['connectionId']"
                                    }
                                },
                                "method": "post",
                                "body": {
                                    "query": "let TwitterIOCs = externaldata(Timestamp:datetime, TwitterUser:string, Type:string, IOC:string, Category:string, TweetLink:string)[h@\"https://raw.githubusercontent.com/0xDanielLopez/TweetFeed/master/month.csv\"] with(format=\"csv\")\n| where not(Category in ('#phishing', '#phishing #scam', '#scam')) and Type =~ 'ip';\nTwitterIOCs\n| summarize TwUser=makeset(TwitterUser), Cat=makeset(Category) by Type, IOC\n| project DestIP=IOC, Source=strcat('Twitter-',replace_string(tostring(TwUser),'\"','')), ioc=replace_string(tostring(Cat),'\"','')",
                                    "timerangetype": "2",
                                    "timerange": {
                                        "relativeTimeRange": "Last hour"
                                    }
                                },
                                "path": "/queryDataV2",
                                "queries": {
                                    "subscriptions": "4c975d2f-9801-43a9-b6ac-ac895fcf3245",
                                    "resourcegroups": "Automation",
                                    "resourcetype": "Log Analytics Workspace",
                                    "resourcename": "LA-Automation"
                                }
                            }
                        },
                        "Query_-_IP_IOC_-_final": {
                            "runAfter": {
                                "threat-ioc-ip.csv": [
                                    "Succeeded"
                                ]
                            },
                            "type": "ApiConnection",
                            "inputs": {
                                "host": {
                                    "connection": {
                                        "name": "@parameters('$connections')['azuremonitorlogs']['connectionId']"
                                    }
                                },
                                "method": "post",
                                "body": {
                                    "query": "[concat('let ThreatIOC = externaldata(DestIP: string, Source: string, ioc: string)[@''https://sechub.blob.core.windows.net/threatfeeds/', parameters('LogicAppName'), '-ip.csv''] with (format=\"csv\", ignoreFirstRecord=True);\nThreatIOC\n| summarize src=makeset(Source), iocs=makeset(ioc) by DestIP\n| project DestIP, Source=replace_regex(tostring(src),@''(\\]|\\[|\")'',''''), IOC=replace_regex(tostring(iocs),@''(\\]|\\[|\")'','''')')]",
                                    "timerangetype": "2",
                                    "timerange": {
                                        "relativeTimeRange": "Last hour"
                                    }
                                },
                                "path": "/queryDataV2",
                                "queries": {
                                    "subscriptions": "[subscription().subscriptionId]",
                                    "resourcegroups": "[resourceGroup().name]",
                                    "resourcetype": "Log Analytics Workspace",
                                    "resourcename": "[parameters('LogAnalyticsWorkspaceName')]"
                                }
                            }
                        },
                        "Create_CSV_-_IP_IOC": {
                            "runAfter": {
                                "Query_-_IP_IOC_-_final": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Table",
                            "inputs": {
                                "from": "@body('Query_-_IP_IOC_-_final')?['value']",
                                "format": "CSV"
                            }
                        },
                        "threat-ip-ioc.csv": {
                            "runAfter": {
                                "Create_CSV_-_IP_IOC": [
                                    "Succeeded"
                                ]
                            },
                            "type": "ApiConnection",
                            "inputs": {
                                "host": {
                                    "connection": {
                                        "name": "@parameters('$connections')['azureblob']['connectionId']"
                                    }
                                },
                                "method": "post",
                                "body": "@body('Create_CSV_-_IP_IOC')",
                                "headers": {
                                    "ReadFileMetadataFromServer": true
                                },
                                "path": "/v2/datasets/@{encodeURIComponent(encodeURIComponent('sechub'))}/files",
                                "queries": {
                                    "folderPath": "[concat('/', parameters('LogicAppName'), 's')]",
                                    "name": "threat-ip-ioc.csv",
                                    "queryParametersSingleEncoded": true
                                }
                            },
                            "runtimeConfiguration": {
                                "contentTransfer": {
                                    "transferMode": "Chunked"
                                }
                            }
                        },
                        "Q_Twitter_Domain": {
                            "runAfter": {},
                            "type": "ApiConnection",
                            "inputs": {
                                "host": {
                                    "connection": {
                                        "name": "@parameters('$connections')['azuremonitorlogs']['connectionId']"
                                    }
                                },
                                "method": "post",
                                "body": {
                                    "query": "let TwitterIOCs = externaldata(Timestamp:datetime, TwitterUser:string, Type:string, IOC:string, Category:string, TweetLink:string)[h@\"https://raw.githubusercontent.com/0xDanielLopez/TweetFeed/master/month.csv\"] with(format=\"csv\")\n| where not(Category in ('#phishing', '#phishing #scam', '#scam')) and Type =~ 'domain';\nTwitterIOCs\n| summarize TwUser=makeset(TwitterUser), Cat=makeset(Category) by Type, IOC\n| project DestIP=IOC, Source=strcat('Twitter-',replace_string(tostring(TwUser),'\"','')), ioc=replace_string(tostring(Cat),'\"','')",
                                    "timerangetype": "2",
                                    "timerange": {
                                        "relativeTimeRange": "Last hour"
                                    }
                                },
                                "path": "/queryDataV2",
                                "queries": {
                                    "subscriptions": "[subscription().subscriptionId]",
                                    "resourcegroups": "[resourceGroup().name]",
                                    "resourcetype": "Log Analytics Workspace",
                                    "resourcename": "[parameters('LogAnalyticsWorkspaceName')]"
                                }
                            }
                        },
                        "Initialize_IOC-Domain": {
                            "runAfter": {
                                "Q_Twitter_Domain": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "IOC-Domain",
                                        "type": "array",
                                        "value": "@body('Q_Twitter_Domain')?['value']"
                                    }
                                ]
                            }
                        },
                        "For_each_Input1": {
                            "foreach": "@body('Query_-_Domain_IOCs')?['value']",
                            "actions": {
                                "Query_-_Domain_IOC": {
                                    "type": "ApiConnection",
                                    "inputs": {
                                        "host": {
                                            "connection": {
                                                "name": "@parameters('$connections')['azuremonitorlogs']['connectionId']"
                                            }
                                        },
                                        "method": "post",
                                        "body": {
                                            "query": "let ThreatIOC = externaldata(@{item()?['Fields']})[h@'@{item()?['IOC_Url']}'] with (format='@{item()?['Format']}', ignoreFirstRecord=@{item()?['ignoreFirstRecord']});\nlet MaliciousDomains  = ThreatIOC\n| where Domain !startswith '#'\n| distinct *\n| extend Domain=trim(@'\\s+',iff(Domain !startswith '127.0.0.1',Domain,replace_string(Domain,'127.0.0.1','')))\n| extend Source='@{item()?['Source']}'\n| project-reorder Domain, Source;\nMaliciousDomains",
                                            "timerangetype": "2",
                                            "timerange": {
                                                "relativeTimeRange": "Last hour"
                                            }
                                        },
                                        "path": "/queryDataV2",
                                        "queries": {
                                        "subscriptions": "[subscription().subscriptionId]",
                                        "resourcegroups": "[resourceGroup().name]",
                                        "resourcetype": "Log Analytics Workspace",
                                        "resourcename": "[parameters('LogAnalyticsWorkspaceName')]"
                                        }
                                    }
                                },
                                "Condition_1": {
                                    "actions": {
                                        "Set_IOC-Domain": {
                                            "runAfter": {
                                                "union_domain_IOC": [
                                                    "Succeeded"
                                                ]
                                            },
                                            "type": "SetVariable",
                                            "inputs": {
                                                "name": "IOC-Domain",
                                                "value": "@outputs('union_domain_IOC')"
                                            }
                                        },
                                        "union_domain_IOC": {
                                            "type": "Compose",
                                            "inputs": "@union(variables('IOC-Domain'),body('Query_-_Domain_IOC')?['value'])"
                                        }
                                    },
                                    "runAfter": {
                                        "Query_-_Domain_IOC": [
                                            "Succeeded"
                                        ]
                                    },
                                    "else": {
                                        "actions": {}
                                    },
                                    "expression": {
                                        "and": [
                                            {
                                                "greater": [
                                                    "@length(body('Query_-_Domain_IOC')?['value'])",
                                                    0
                                                ]
                                            }
                                        ]
                                    },
                                    "type": "If"
                                }
                            },
                            "runAfter": {
                                "Query_-_Domain_IOCs": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Foreach"
                        },
                        "csv_ioc_domain": {
                            "runAfter": {
                                "For_each_Input1": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Table",
                            "inputs": {
                                "from": "@variables('IOC-Domain')",
                                "format": "CSV"
                            }
                        },
                        "threat-ioc-domain.csv": {
                            "runAfter": {
                                "csv_ioc_domain": [
                                    "Succeeded"
                                ]
                            },
                            "type": "ApiConnection",
                            "inputs": {
                                "host": {
                                    "connection": {
                                        "name": "@parameters('$connections')['azureblob']['connectionId']"
                                    }
                                },
                                "method": "post",
                                "body": "@body('csv_ioc_domain')",
                                "headers": {
                                    "ReadFileMetadataFromServer": true
                                },
                                "path": "/v2/datasets/@{encodeURIComponent(encodeURIComponent('sechub'))}/files",
                                "queries": {
                                    "folderPath": "[concat('/', parameters('LogicAppName'), 's')]",
                                    "name": "[concat(parameters('LogicAppName'), '-domain.csv')]",
                                    "queryParametersSingleEncoded": true
                                }
                            },
                            "runtimeConfiguration": {
                                "contentTransfer": {
                                    "transferMode": "Chunked"
                                }
                            }
                        },
                        "Query_domain_IOC": {
                            "runAfter": {
                                "threat-ioc-domain.csv": [
                                    "Succeeded"
                                ]
                            },
                            "type": "ApiConnection",
                            "inputs": {
                                "host": {
                                    "connection": {
                                        "name": "@parameters('$connections')['azuremonitorlogs']['connectionId']"
                                    }
                                },
                                "method": "post",
                                "body": {
                                    "query": "[concat('let ThreatIOC_Urls = externaldata(DestIP: string, Source: string, ioc: string)[@''https://sechub.blob.core.windows.net/threatfeeds/', parameters('LogicAppName'), '-domain.csv''] with (format=\"csv\", ignoreFirstRecord=True);\nThreatIOC_Urls\n| summarize src=makeset(Source), iocs=makeset(ioc) by DestIP\n| project DestIP, Source=replace_regex(tostring(src),@''(\\]|\\[|\")'',''''), IOC=replace_regex(tostring(iocs),@''(\\]|\\[|\")'','''')')]",
                                    "timerangetype": "2",
                                    "timerange": {
                                        "relativeTimeRange": "Last hour"
                                    }
                                },
                                "path": "/queryDataV2",
                                "queries": {
                                    "subscriptions": "[subscription().subscriptionId]",
                                    "resourcegroups": "[resourceGroup().name]",
                                    "resourcetype": "Log Analytics Workspace",
                                    "resourcename": "[parameters('LogAnalyticsWorkspaceName')]"
                                }
                            }
                        },
                        "CSV_-_domain_IOC": {
                            "runAfter": {
                                "Query_domain_IOC": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Table",
                            "inputs": {
                                "from": "@body('Query_domain_IOC')?['value']",
                                "format": "CSV"
                            }
                        },
                        "threat-domain-ioc.csv": {
                            "runAfter": {
                                "CSV_-_domain_IOC": [
                                    "Succeeded"
                                ]
                            },
                            "type": "ApiConnection",
                            "inputs": {
                                "host": {
                                    "connection": {
                                        "name": "@parameters('$connections')['azureblob']['connectionId']"
                                    }
                                },
                                "method": "post",
                                "body": "@body('CSV_-_domain_IOC')",
                                "headers": {
                                    "ReadFileMetadataFromServer": true
                                },
                                "path": "/v2/datasets/@{encodeURIComponent(encodeURIComponent('sechub'))}/files",
                                "queries": {
                                    "folderPath": "[concat('/', parameters('LogicAppName'), 's')]",
                                    "name": "threat-domain-ioc.csv",
                                    "queryParametersSingleEncoded": true
                                }
                            },
                            "runtimeConfiguration": {
                                "contentTransfer": {
                                    "transferMode": "Chunked"
                                }
                            }
                        }
                    },
                    "outputs": {}
                },
                "parameters": {
                    "$connections": {
                        "value": {
                            "azuremonitorlogs": {
                                "id": "[subscriptionResourceId('Microsoft.Web/locations/managedApis', variables('resourceGroupLocation'), 'azuremonitorlogs')]",
                                "connectionId": "[variables('connections_azuremonitorlogs_externalid')]",
                                "connectionName": "azuremonitorlogs",
                                "connectionProperties": {
                                    "authentication": {
                                        "identity": "[variables('userAssignedIdentityId')]",
                                        "type": "ManagedServiceIdentity"
                                    }
                                }
                            },
                            "azureblob": {
                                "id": "[subscriptionResourceId('Microsoft.Web/locations/managedApis', variables('resourceGroupLocation'), 'azureblob')]",
                                "connectionId": "[variables('connections_azureblob_externalid')]",
                                "connectionName": "azureblob",
                                "connectionProperties": {
                                    "authentication": {
                                        "identity": "[variables('userAssignedIdentityId')]",
                                        "type": "ManagedServiceIdentity"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
       {
            "type": "Microsoft.Web/connections",
            "apiVersion": "2016-06-01",
            "name": "azureblob",
            "location": "[variables('resourceGroupLocation')]",
            "kind": "V1",
            "properties": {
                "displayName": "azureblob",
                "api": {
                    "id": "[subscriptionResourceId('Microsoft.Web/locations/managedApis', variables('resourceGroupLocation'), 'azureblob')]"
                },
                "parameterValueSet": {
                    "name": "managedIdentityAuth",
                    "values": {}
                }
            }
        },
        {
            "type": "Microsoft.Web/connections",
            "apiVersion": "2016-06-01",
            "name": "[parameters('LogAnalyticsAPI')]",
            "location": "[variables('resourceGroupLocation')]",
            "kind": "V1",
            "properties": {
                "displayName": "[parameters('LogAnalyticsAPI')]",
                "customParameterValues": {},
                "api": {
                    "id": "[subscriptionResourceId('Microsoft.Web/locations/managedApis', variables('resourceGroupLocation'), parameters('LogAnalyticsAPI'))]"
                },
                "parameterValueSet": {
                    "username": "[reference(variables('logAnalyticsID'), '2015-03-20').customerId]",
                    "password": "[listKeys(variables('logAnalyticsID'), '2015-03-20').primarySharedKey]"
                }
            }
        }          
    ]
}
