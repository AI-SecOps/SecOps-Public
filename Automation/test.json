{  
  "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",  
  "contentVersion": "1.0.0.0",  
  "parameters": {  
    "subscriptionId": {  
      "type": "String",  
      "defaultValue": "00000000-0000-0000-0000-000000000000"  
    },  
    "name": {  
      "type": "String",  
      "defaultValue": "test-func-app"  
    },  
    "location": {  
      "type": "String",  
      "defaultValue": "eastus"  
    },  
    "storageBlobContainerName": {  
      "type": "String",  
      "defaultValue": "testcontainer"  
    },  
    "autoGeneratedDomainNameLabelScope": {  
      "type": "String",  
      "defaultValue": "testlabel"  
    },  
    "storageAccountName": {  
      "type": "String",  
      "defaultValue": "teststorageacct001"  
    },  
    "sku": {  
      "type": "String",  
      "defaultValue": "ElasticPremium"  
    },  
    "skuCode": {  
      "type": "String",  
      "defaultValue": "EP1"  
    },  
    "workerSize": {  
      "type": "String",  
      "defaultValue": "0"  
    },  
    "workerSizeId": {  
      "type": "String",  
      "defaultValue": "0"  
    },  
    "numberOfWorkers": {  
      "type": "String",  
      "defaultValue": "1"  
    },  
    "hostingPlanName": {  
      "type": "String",  
      "defaultValue": "test-asp"  
    },  
    "serverFarmResourceGroup": {  
      "type": "String",  
      "defaultValue": "rgAutomation"  
    },  
    "alwaysOn": {  
      "type": "Bool",  
      "defaultValue": true  
    }  
  },  
  "variables": {},  
  "resources": [  
    {  
      "type": "Microsoft.Web/sites",  
      "apiVersion": "2022-03-01",  
      "name": "[parameters('name')]",  
      "location": "[parameters('location')]",  
      "dependsOn": [  
        "[concat('Microsoft.Web/serverfarms/', parameters('hostingPlanName'))]",  
        "[concat('Microsoft.Storage/storageAccounts/', parameters('storageAccountName'))]"  
      ],  
      "tags": {},  
      "kind": "functionapp,linux",  
      "identity": {  
        "type": "UserAssigned",  
        "userAssignedIdentities": {  
          "/subscriptions/d73b9dc7-c78b-404d-a154-8e2593d9bd33/resourcegroups/rgAutomation/providers/Microsoft.ManagedIdentity/userAssignedIdentities/AzOpenAI_MI": {}  
        }  
      },  
      "properties": {  
        "name": "[parameters('name')]",  
        "siteConfig": {  
          "appSettings": [  
            {  
              "name": "AzureWebJobsStorage__credential",  
              "value": "managedidentity"  
            },  
            {  
              "name": "AzureWebJobsStorage__blobServiceUri",  
              "value": "[concat('https://', parameters('storageAccountName'), '.blob.core.windows.net')]"  
            },  
            {  
              "name": "AzureWebJobsStorage__queueServiceUri",  
              "value": "[concat('https://', parameters('storageAccountName'), '.queue.core.windows.net')]"  
            },  
            {  
              "name": "AzureWebJobsStorage__tableServiceUri",  
              "value": "[concat('https://', parameters('storageAccountName'), '.table.core.windows.net')]"  
            },  
            {  
              "name": "AzureWebJobsStorage__clientId",  
              "value": "a653837a-c9e3-4b68-b46e-f364b88ff2a9"  
            }  
          ],  
          "cors": {  
            "allowedOrigins": [  
              "https://portal.azure.com"  
            ]  
          }  
        },  
        "clientAffinityEnabled": false,  
        "virtualNetworkSubnetId": null,  
        "autoGeneratedDomainNameLabelScope": "[parameters('autoGeneratedDomainNameLabelScope')]",  
        "functionAppConfig": {  
          "deployment": {  
            "storage": {  
              "type": "blobContainer",  
              "value": "[concat('https://', parameters('storageAccountName'), '.blob.', 'core.windows.net', '/', parameters('storageBlobContainerName'))]",  
              "authentication": {  
                "type": "UserAssignedIdentity",  
                "userAssignedIdentityResourceId": "/subscriptions/d73b9dc7-c78b-404d-a154-8e2593d9bd33/resourcegroups/rgAutomation/providers/Microsoft.ManagedIdentity/userAssignedIdentities/AzOpenAI_MI"  
              }  
            }  
          },  
          "scaleAndConcurrency": {  
            "maximumInstanceCount": 100,  
            "instanceMemoryMB": 4096  
          },  
          "runtime": {  
            "name": "python",  
            "version": "3.12"  
          }  
        },  
        "publicNetworkAccess": "Enabled",  
        "httpsOnly": true,  
        "serverFarmId": "[concat('/subscriptions/', parameters('subscriptionId'),'/resourcegroups/', parameters('serverFarmResourceGroup'), '/providers/Microsoft.Web/serverfarms/', parameters('hostingPlanName'))]"  
      },  
      "resources": [  
        {  
          "type": "Microsoft.Web/sites/basicPublishingCredentialsPolicies",  
          "apiVersion": "2022-09-01",  
          "name": "[concat(parameters('name'), '/scm')]",  
          "dependsOn": [  
            "[resourceId('Microsoft.Web/sites', parameters('name'))]"  
          ],  
          "properties": {  
            "allow": false  
          }  
        },  
        {  
          "type": "Microsoft.Web/sites/basicPublishingCredentialsPolicies",  
          "apiVersion": "2022-09-01",  
          "name": "[concat(parameters('name'), '/ftp')]",  
          "dependsOn": [  
            "[resourceId('Microsoft.Web/sites', parameters('name'))]"  
          ],  
          "properties": {  
            "allow": false  
          }  
        }  
      ]  
    },  
    {  
      "type": "Microsoft.Web/serverfarms",  
      "apiVersion": "2018-11-01",  
      "name": "[parameters('hostingPlanName')]",  
      "location": "[parameters('location')]",  
      "dependsOn": [],  
      "tags": {},  
      "sku": {  
        "Tier": "[parameters('sku')]",  
        "Name": "[parameters('skuCode')]"  
      },  
      "kind": "linux",  
      "properties": {  
        "name": "[parameters('hostingPlanName')]",  
        "workerSize": "[parameters('workerSize')]",  
        "workerSizeId": "[parameters('workerSizeId')]",  
        "numberOfWorkers": "[parameters('numberOfWorkers')]",  
        "reserved": true,  
        "zoneRedundant": false  
      }  
    },  
    {  
      "type": "Microsoft.Storage/storageAccounts",  
      "apiVersion": "2022-05-01",  
      "name": "[parameters('storageAccountName')]",  
      "location": "[parameters('location')]",  
      "dependsOn": [],  
      "tags": {},  
      "sku": {  
        "name": "Standard_LRS"  
      },  
      "properties": {  
        "supportsHttpsTrafficOnly": true,  
        "minimumTlsVersion": "TLS1_2",  
        "defaultToOAuthAuthentication": true,  
        "allowBlobPublicAccess": false,  
        "publicNetworkAccess": "Enabled"  
      }  
    },  
    {  
      "type": "Microsoft.Resources/deployments",  
      "apiVersion": "2021-04-01",  
      "name": "StorageBlobContainerTemplate",  
      "dependsOn": [  
        "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName'))]"  
      ],  
      "properties": {  
        "mode": "Incremental",  
        "template": {  
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",  
          "contentVersion": "1.0.0.1",  
          "parameters": {},  
          "variables": {},  
          "resources": [  
            {  
              "name": "[concat(parameters('storageAccountName'), '/default')]",  
              "type": "Microsoft.Storage/storageAccounts/blobServices",  
              "apiVersion": "2022-05-01",  
              "dependsOn": []  
            },  
            {  
              "type": "Microsoft.Storage/storageAccounts/blobServices/containers",  
              "apiVersion": "2022-05-01",  
              "name": "[concat(parameters('storageAccountName'), '/default/', parameters('storageBlobContainerName'))]",  
              "dependsOn": [  
                "[resourceId('rgAutomation','Microsoft.Storage/storageAccounts/blobServices', parameters('storageAccountName'), 'default')]"  
              ]  
            }  
          ]  
        }  
      },  
      "subscriptionId": "[parameters('subscriptionId')]",  
      "resourceGroup": "rgAutomation"  
    }  
  ]  
}  
